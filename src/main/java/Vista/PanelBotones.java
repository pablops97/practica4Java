/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;


import Controlador.MyList;
import Modelo.Analista;
import Modelo.ESaldoNoValido;
import Modelo.Empleado;
import Modelo.Fecha;
import Modelo.Programador;
import java.awt.BorderLayout;
import java.awt.List;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author ConoMaster
 */
public class PanelBotones extends JPanel {

    /**
     * Creates new form PanelBotones
     */
    
    VistaPrincipal vistaPrincipal;
    private final int CREADOMASIVO = 100000;
    
    public PanelBotones(VistaPrincipal frame) throws ESaldoNoValido{
        initComponents();
        vistaPrincipal = frame;
        activarDesactivarBotonesAtras(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonPrimero = new javax.swing.JButton();
        botonAnterior = new javax.swing.JButton();
        botonUltimo = new javax.swing.JButton();
        botonSiguiente = new javax.swing.JButton();
        botonOrdenar = new javax.swing.JButton();
        botonGuardar = new javax.swing.JButton();
        botonCargar = new javax.swing.JButton();
        botonInsertar = new javax.swing.JButton();
        botonCreadoMasivo = new javax.swing.JButton();
        botonCalcular = new javax.swing.JButton();
        botonJList = new javax.swing.JButton();

        botonPrimero.setText("PRIMERO");
        botonPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPrimeroActionPerformed(evt);
            }
        });

        botonAnterior.setText("ANTERIOR");
        botonAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAnteriorActionPerformed(evt);
            }
        });

        botonUltimo.setText("ÃšLTIMO");
        botonUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonUltimoActionPerformed(evt);
            }
        });

        botonSiguiente.setText("SIGUIENTE");
        botonSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteActionPerformed(evt);
            }
        });

        botonOrdenar.setText("ORDENAR");
        botonOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdenarActionPerformed(evt);
            }
        });

        botonGuardar.setText("GUARDAR");
        botonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarActionPerformed(evt);
            }
        });

        botonCargar.setText("CARGAR");
        botonCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCargarActionPerformed(evt);
            }
        });

        botonInsertar.setText("INSERTAR");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });

        botonCreadoMasivo.setText("CREADO MASIVO");
        botonCreadoMasivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCreadoMasivoActionPerformed(evt);
            }
        });

        botonCalcular.setText("CALCULAR");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        botonJList.setText("JLIST");
        botonJList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonCargar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(botonPrimero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(botonAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(199, 199, 199)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonCreadoMasivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 194, Short.MAX_VALUE)
                .addComponent(botonSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonJList, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(botonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(botonUltimo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(botonOrdenar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonUltimo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonSiguiente, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonAnterior, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonPrimero, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botonInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonCalcular, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botonCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(botonCreadoMasivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botonJList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPrimeroActionPerformed
        
        vistaPrincipal.primerElemento();
    }//GEN-LAST:event_botonPrimeroActionPerformed

    private void botonUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonUltimoActionPerformed
        
        vistaPrincipal.lista.goingLastNode();
        vistaPrincipal.panelEmpleados.mostrarDatos();
        activarDesactivarBotonesAtras(true);
        activarDesactivarBotonesSiguiente(false);
    }//GEN-LAST:event_botonUltimoActionPerformed

    private void botonAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAnteriorActionPerformed
        
        vistaPrincipal.lista.previousNode();
        vistaPrincipal.panelEmpleados.mostrarDatos();
        activarDesactivarBotonesSiguiente(true);
        if(vistaPrincipal.lista.isFirst()){
            activarDesactivarBotonesAtras(false);
        }
    }//GEN-LAST:event_botonAnteriorActionPerformed

    private void botonSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteActionPerformed
        
        vistaPrincipal.lista.nextNode();
        vistaPrincipal.panelEmpleados.mostrarDatos();
        activarDesactivarBotonesAtras(true);
        if(vistaPrincipal.lista.isLast()){
            activarDesactivarBotonesSiguiente(false);
        }
    }//GEN-LAST:event_botonSiguienteActionPerformed

    private void botonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
    
        String tipo;
        tipo = JOptionPane.showInputDialog("Â¿Que tipo de empleado vas a crear? (Analista, Programador)");
        if("Programador".equalsIgnoreCase(tipo) || "Analista".equalsIgnoreCase(tipo)){
            
            vistaPrincipal.crearEmpleados.setTipo(tipo);
            vistaPrincipal.crearEmpleados.elegirTipo();
            
            //Ocultar los dos paneles del jframe para mostrar el panel crearEmpleado
            
            vistaPrincipal.botones.setVisible(false);
            vistaPrincipal.panelEmpleados.setVisible(false);
            vistaPrincipal.add(vistaPrincipal.crearEmpleados, BorderLayout.CENTER);
            vistaPrincipal.crearEmpleados.limpiarCampos();
            vistaPrincipal.crearEmpleados.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(vistaPrincipal, "El empleado ha de ser uno de los dos tipos mencionados anteriormente");
        }
        
        
        
    }//GEN-LAST:event_botonInsertarActionPerformed

    private void botonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
        try{
           String ruta = fileChooser.getSelectedFile().getAbsolutePath();
           vistaPrincipal.lista.serializacion(ruta);
           JOptionPane.showConfirmDialog(vistaPrincipal, "Â¡Empleados guardados con Ã©xito!");
        }catch(NullPointerException n){
 
        } catch (IOException ex) {
            Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_botonGuardarActionPerformed

    private void botonCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCargarActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(fileChooser);
         
        try{
           String ruta = fileChooser.getSelectedFile().getAbsolutePath();
           ArrayList<Empleado> empleados = vistaPrincipal.lista.deserializar(ruta);
           vistaPrincipal.lista.vaciarLista();
           
           for(Empleado e : empleados){
               vistaPrincipal.lista.add(e, e.getNumero());
           }
           
           JOptionPane.showConfirmDialog(this, "Â¡Empleados cargados con Ã©xito!");
           vistaPrincipal.primerElemento();
        }catch(NullPointerException n){
            
        }
    }//GEN-LAST:event_botonCargarActionPerformed

    private void botonCreadoMasivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCreadoMasivoActionPerformed
        //generacion de empleados con numeros aleatorios entre 0 y 100k
        
        for(int i = 0; i <= CREADOMASIVO; i++){
            int numero = (int) (Math.floor(Math.random() * (2001-1000000+1)+1000000));
//            while(vistaPrincipal.lista.existe(numero)){
//                numero = (int) (Math.floor(Math.random() * (2001-1000000+1)+1000000));
//            }
            try {
                vistaPrincipal.lista.add(new Programador(0,null,numero,"Empleado "+ i,0,1,new Fecha()), numero);
                System.out.println(vistaPrincipal.lista.getActualNode().getMain().toString());
            } catch (ESaldoNoValido ex) {
                Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex.getMessage());
            }
        }
        
        for(int i = 0; i <= 20; i++){
            int numero = (int) (Math.floor(Math.random() * (1-2000+1)+2000));
            while(vistaPrincipal.lista.existe(numero)){
                numero = (int) (Math.floor(Math.random() * (1-2000+1)+2000));
            }
            try {
                vistaPrincipal.lista.add(new Analista(0,0,numero,"Empleado "+ i,0,1,new Fecha()), numero);
                System.out.println(vistaPrincipal.lista.getActualNode().getMain().toString());
            } catch (ESaldoNoValido ex) {
                Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex.getMessage());
            }
        }
        vistaPrincipal.primerElemento();
        JOptionPane.showMessageDialog(vistaPrincipal, "Creado masivo completado!");
        
    }//GEN-LAST:event_botonCreadoMasivoActionPerformed

    private void botonOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdenarActionPerformed
        vistaPrincipal.lista.goingFirstNode();
        ArrayList empleados ;
        empleados = vistaPrincipal.generarArrayList();

        long primerTiempo = System.currentTimeMillis();
        vistaPrincipal.lista.sortMejorado();
        long segundoTiempo = System.currentTimeMillis();
        JOptionPane.showMessageDialog(vistaPrincipal, "Ordenados con exito!, el tiempo de ejecuciÃ³n del ordenamiento por el metodo creado en MyList es de " + (segundoTiempo - primerTiempo));
          
        JOptionPane.showMessageDialog(vistaPrincipal, "Creamos un collection, en este caso un ArrayList y lo ordenamos");
        
        //En la clase empleado tengo implementado java.lang.Comparable y sobrescribiendo el metodo compare para tener un sistema de ordenaciÃ³n
        //para que el collection.sort utilice el metodo para ordenar
        
        primerTiempo = System.currentTimeMillis();
        Collections.sort(empleados);
        segundoTiempo = System.currentTimeMillis();
        JOptionPane.showMessageDialog(vistaPrincipal, "Ordenados con exito!, el tiempo de ejecuciÃ³n del ordenamiento del ArrayList es de " + (segundoTiempo - primerTiempo));
        
        System.out.println(empleados);
        
        
    }//GEN-LAST:event_botonOrdenarActionPerformed

    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed

        float sueldo;
        if(esAnalista()){
            Analista aux = (Analista)vistaPrincipal.lista.getActualNode().getMain();
            sueldo = (aux.getSueldo() + (aux.getSueldo()* (aux.getPlusAnual()/100)));
            try {
                aux.setSueldo(sueldo);
                
            } catch (ESaldoNoValido ex) {
                JOptionPane.showMessageDialog(botonJList, ex.getMessage());
                try {
                    aux.setSueldo(aux.getSueldoMaximo());
                } catch (ESaldoNoValido ex1) {
                    Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex1);
                }
                botonCalcular.setEnabled(false);
                
            }
            vistaPrincipal.panelEmpleados.getSueldoField().setText(""+aux.getSueldo());
            
        }else{
            Programador aux = (Programador)vistaPrincipal.lista.getActualNode().getMain();
            sueldo = aux.getSueldo() + (aux.getSueldo()* (int)(aux.getSueldoExtraMensual()/100));
            try {
                aux.setSueldo(sueldo);
            } catch (ESaldoNoValido ex) {
                JOptionPane.showMessageDialog(botonJList, ex.getMessage());
                botonCalcular.setEnabled(false);
                try {
                    aux.setSueldo(aux.getSueldoMaximo());
                } catch (ESaldoNoValido ex1) {
                    Logger.getLogger(PanelBotones.class.getName()).log(Level.SEVERE, null, ex1);
            }
            
        }
        vistaPrincipal.panelEmpleados.getSueldoField().setText(""+aux.getSueldo());
        }
    }//GEN-LAST:event_botonCalcularActionPerformed

    private void botonJListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJListActionPerformed
        vistaPrincipal.panelJList = new PanelJLista(vistaPrincipal);
        vistaPrincipal.botones.setVisible(false);
        vistaPrincipal.panelEmpleados.setVisible(false);
        vistaPrincipal.add(vistaPrincipal.panelJList, BorderLayout.CENTER);
        vistaPrincipal.panelJList.setVisible(true);
    }//GEN-LAST:event_botonJListActionPerformed

    public void activarDesactivarBotonesSiguiente(boolean t){
        botonSiguiente.setEnabled(t);
        botonUltimo.setEnabled(t);
    }
    public void activarDesactivarBotonesAtras(boolean t){
        botonAnterior.setEnabled(t);
        botonPrimero.setEnabled(t);
        }

    public boolean activarBotonCalcular(){
        if("Analista".equals(vistaPrincipal.lista.getActualNode().getMain().getClass().getSimpleName())){
            Analista aux = (Analista)vistaPrincipal.lista.getActualNode().getMain();
            if(aux.cumpleAnios()){
                return true;
            }else{
                return false;
            }
        }else{
            Programador aux = (Programador)vistaPrincipal.lista.getActualNode().getMain();
            if(aux.cumpleMes()){
                return true;
            }else{
                return false;
            }
        }
    }

    public JButton getBotonCalcular() {
        return botonCalcular;
    }
    
    public boolean esAnalista(){
        if("Analista".equals(vistaPrincipal.lista.getActualNode().getMain().getClass().getSimpleName())){
            return true;
        }else{
            return false;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAnterior;
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonCargar;
    private javax.swing.JButton botonCreadoMasivo;
    private javax.swing.JButton botonGuardar;
    private javax.swing.JButton botonInsertar;
    private javax.swing.JButton botonJList;
    private javax.swing.JButton botonOrdenar;
    private javax.swing.JButton botonPrimero;
    private javax.swing.JButton botonSiguiente;
    private javax.swing.JButton botonUltimo;
    // End of variables declaration//GEN-END:variables
}
